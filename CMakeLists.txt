CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )

IF( "${CMAKE_SOURCE_DIR}" STREQUAL "${CMAKE_BINARY_DIR}" )
  MESSAGE( FATAL_ERROR "In-source build prohibited." )
ENDIF()

IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fpermissive -Wall")
ENDIF()
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBASE0")

SET(MESHIT_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/target/${TARGET_PLATFORM})
SET(EXECUTABLE_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/bin)
SET(LIBRARY_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/lib)
SET(LIBRARY_64_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/lib64)
SET(INCLUDE_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/include)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${EXECUTABLE_OUTPUT_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${EXECUTABLE_OUTPUT_PATH})

LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH})
LINK_DIRECTORIES(${LIBRARY_64_OUTPUT_PATH})
INCLUDE_DIRECTORIES(${INCLUDE_OUTPUT_PATH})

##########
# Log4Cplus
##########

LIST(APPEND MESHIT_LINK_LIBRARIES  ${MESHIT_LIBS})

LIST(APPEND MESHIT_INCLUDES ${PROJECT_SOURCE_DIR})
LIST(APPEND MESHIT_INCLUDES ${PROJECT_SOURCE_DIR}/meshit/include)
INCLUDE_DIRECTORIES(${MESHIT_INCLUDES})

ADD_SUBDIRECTORY(meshit)
ADD_SUBDIRECTORY(examples)
