CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )

IF( "${CMAKE_SOURCE_DIR}" STREQUAL "${CMAKE_BINARY_DIR}" )
  MESSAGE( FATAL_ERROR "In-source build prohibited." )
ENDIF()

IF(CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fpermissive -Wall")
ENDIF()
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBASE0")

SET(MESHIT_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/target/${TARGET_PLATFORM})
SET(EXECUTABLE_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/bin)
SET(LIBRARY_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/lib)
SET(LIBRARY_64_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/lib64)
SET(INCLUDE_OUTPUT_PATH ${MESHIT_OUTPUT_PATH}/include)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${EXECUTABLE_OUTPUT_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${EXECUTABLE_OUTPUT_PATH})
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${EXECUTABLE_OUTPUT_PATH})

LINK_DIRECTORIES(${LIBRARY_OUTPUT_PATH})
LINK_DIRECTORIES(${LIBRARY_64_OUTPUT_PATH})
INCLUDE_DIRECTORIES(${INCLUDE_OUTPUT_PATH})

##########
# Log4Cplus
##########

include(ExternalProject)

SET(LOG4CPLUS_LIB_NAME log4cplus)

if(MSVC)
  set(LOG4CPLUS_CONF_COMMAND "")
  set(LOG4CPLUS_BUILD_COMMAND BUILD_COMMAND MSBuild.exe ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/msvc10/log4cplus.sln)
  set(LOG4CPLUS_INSTALL_COMMAND "")
else(MSVC)
  set(LOG4CPLUS_CONF_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/configure ${CONFIGURE_ARGS} --prefix=${MESHIT_OUTPUT_PATH})
  set(LOG4CPLUS_BUILD_COMMAND "")
  set(LOG4CPLUS_INSTALL_COMMAND "")
endif(MSVC)

ExternalProject_add(
    ${LOG4CPLUS_LIB_NAME}_LIB
    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/${LOG4CPLUS_LIB_NAME}
    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus
    CONFIGURE_COMMAND ${LOG4CPLUS_CONF_COMMAND}
    ${LOG4CPLUS_BUILD_COMMAND}
    ${LOG4CPLUS_INSTALL_COMMAND}
)

if (MSVC)
  ADD_CUSTOM_COMMAND(TARGET ${LOG4CPLUS_LIB_NAME}
    POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory ${INCLUDE_OUTPUT_PATH}/log4cplus
    COMMAND ${CMAKE_COMMAND} -E make_directory ${EXECUTABLE_OUTPUT_PATH}/
    COMMAND ${CMAKE_COMMAND} -E make_directory ${LIBRARY_OUTPUT_PATH}/
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/include/log4cplus ${INCLUDE_OUTPUT_PATH}/log4cplus
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/msvc10/Win32/bin.Debug/log4cplus-CLFSAppender.dll ${EXECUTABLE_OUTPUT_PATH}/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/msvc10/Win32/bin.Debug/log4cplusD.dll ${EXECUTABLE_OUTPUT_PATH}/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/msvc10/Win32/bin.Debug/log4cplusD.lib ${LIBRARY_OUTPUT_PATH}/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/msvc10/Win32/bin.Debug/log4cplusSD.lib ${LIBRARY_OUTPUT_PATH}/
    COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/log4cplus/msvc10/Win32/bin.Debug/log4cplus-CLFSAppender.lib ${LIBRARY_OUTPUT_PATH}/
    )
endif(MSVC)

LIST(APPEND MESHIT_DEPS ${LOG4CPLUS_LIB_NAME}_LIB)
LIST(APPEND MESHIT_LIBS ${LOG4CPLUS_LIB_NAME})
LIST(APPEND MESHIT_LINK_LIBRARIES  ${MESHIT_LIBS})

LIST(APPEND MESHIT_INCLUDES ${PROJECT_SOURCE_DIR})
LIST(APPEND MESHIT_INCLUDES ${PROJECT_SOURCE_DIR}/meshit/include)
INCLUDE_DIRECTORIES(${MESHIT_INCLUDES})

ADD_SUBDIRECTORY(meshit)
ADD_SUBDIRECTORY(examples)
